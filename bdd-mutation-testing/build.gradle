plugins {
  id 'java'
  id 'groovy'
  id 'jacoco'
  //latest version https://plugins.gradle.org/plugin/org.springframework.boot
  id 'org.springframework.boot' version '3.2.5'
  //latest version https://plugins.gradle.org/plugin/io.spring.dependency-management
  id 'io.spring.dependency-management' version '1.1.5'
  //latest version https://plugins.gradle.org/plugin/com.diffplug.gradle.spotless
  id 'com.diffplug.spotless' version '6.25.0'
  //latest version https://plugins.gradle.org/plugin/info.solidsoft.pitest
  id 'info.solidsoft.pitest' version '1.15.0'
}

group = 'pl.jcw.example.bddmutation'
version = '0.0.1-SNAPSHOT'

ext {
  //latest version https://mvnrepository.com/artifact/org.projectlombok/lombok
  lombokVersion = '1.18.32'
}

java {
  sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
  mavenCentral()
}

dependencies {
  //https://mvnrepository.com/artifact/com.github.ksuid/ksuid
  implementation 'com.github.ksuid:ksuid:1.1.2'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.flywaydb:flyway-core'
  runtimeOnly 'org.postgresql:postgresql'
  testImplementation 'org.testcontainers:postgresql'

  //testing dependencies
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.testcontainers:junit-jupiter'

  //spock dependencies
  //https://mvnrepository.com/artifact/com.athaydes/spock-reports
  testImplementation 'com.athaydes:spock-reports:2.5.1-groovy-4.0'
  testImplementation platform('org.spockframework:spock-bom:2.3-groovy-4.0')
  testImplementation 'org.spockframework:spock-core'
  testImplementation 'org.spockframework:spock-spring'
  testImplementation 'org.testcontainers:spock'

  //lombok
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

tasks.named('test') {
  useJUnitPlatform()
}

check.dependsOn jacocoTestReport

pitest {
  //default targetClasses is "${project.group}.
  targetClasses = ['pl.jcw.*']
  excludedTestClasses = ['pl.jcw.**.*IntegrationSpec']
  threads = Runtime.runtime.availableProcessors()
  outputFormats = ['XML', 'HTML']
  //latest version: https://mvnrepository.com/artifact/org.pitest/pitest-junit5-plugin
  junit5PluginVersion = '1.2.1'
}

Directory spockReportsDir = rootProject.layout.buildDirectory.get().dir("spock-reports")
Directory spockReportsBackupDir = rootProject.layout.buildDirectory.get().dir("spock-reports-backup")

task backupSpockReports(type: Copy) {
  from spockReportsDir
  into spockReportsBackupDir
}

task restoreSpockReports(type: Copy) {
  from spockReportsBackupDir
  into spockReportsDir
}


task cleanSpockReportsBackup(type: Delete) {
  delete spockReportsBackupDir
}

task cleanSpockReports(type: Delete) {
  delete spockReportsDir
}

restoreSpockReports.configure {
  dependsOn cleanSpockReports
  finalizedBy cleanSpockReportsBackup
}

tasks.named("pitest").configure {
  //this hack is required cause pitest is breaking tests on purpose and this is captured in spock reports
  dependsOn backupSpockReports
  finalizedBy restoreSpockReports
}

build.finalizedBy('pitest')

spotless {
  //see configuration of spotless formatter https://github.com/diffplug/spotless/tree/main/plugin-gradle
  java{
    googleJavaFormat()
    removeUnusedImports()
  }

  groovy {
    target '**/*.groovy'
    greclipse().configFile 'eclipse-java-google-style.xml' // for Groovy files
  }

  groovyGradle {
    target '*.gradle' // default target of groovyGradle
    greclipse()
    indentWithSpaces(2)
  }
}
